import { InlineKeyboard, InputFile } from 'grammy';
import type { MyContext } from '../types';
import { logUserAction } from '../utils';

export async function showSettings(ctx: MyContext) {
  const keyboard = new InlineKeyboard()
    .text('üîû –†–µ–π—Ç–∏–Ω–≥')
    .row()
    .text(`nekosapi.com (${ctx.session.rating.nekos})`, 'rating-nekos')
    .text(`e621.net (${ctx.session.rating.e621})`, 'rating-e621')
    .row()
    .text('üìÑ –¢–µ–≥–∏')
    .row()
    .text(`e621.net (${ctx.session.tags})`, 'tags');

  await ctx.replyWithPhoto(new InputFile('bot/attachments/settings.png'), {
    reply_markup: keyboard,
  });

  logUserAction(ctx, '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏');
}

export async function setSettings(ctx: MyContext) {
  const data = ctx.callbackQuery?.data;

  switch (data) {
    case 'rating-nekos':
    case 'rating-e621': {
      await ctx.conversation.enter('setRating');
      await ctx.answerCallbackQuery('–í—ã–±–æ—Ä —Ä–µ–π—Ç–∏–Ω–≥–∞');

      logUserAction(ctx, '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ -> –†–µ–π—Ç–∏–Ω–≥');
      break;
    }
    case 'tags': {
      await ctx.conversation.enter('setTags');
      await ctx.answerCallbackQuery('–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ–≥–æ–≤');
      logUserAction(ctx, '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ -> –¢–µ–≥–∏');
      break;
    }
    default: {
      await ctx.answerCallbackQuery('–ù–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º–∞—è –∫–Ω–æ–ø–∫–∞');
      break;
    }
  }
}
